pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "192.168.33.10:8083/nodemongoapp:6.0"
        NEXUS_URL = "http://172.28.240.88:8083"
        NEXUS_CREDENTIALS = "nexus-credentials-id"
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/haythemraggad/DevopsProject.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install --legacy-peer-deps' // Fix for missing dependencies
            }
        }

        stage('Unit Test') {
            steps {
                sh 'npm test'
            }
        }

        stage('Build Application') {
            steps {
                sh 'npm run build-dev'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker-compose build'
            }
        }

        stage('Scan Docker Image') {
            steps {
                script {
                    def trivyCheck = sh(script: 'command -v trivy', returnStatus: true)
                    if (trivyCheck != 0) {
                        sh 'echo "Installing Trivy..." && sudo apt-get install -y trivy'
                    }
                    sh 'trivy image $DOCKER_IMAGE --severity HIGH,CRITICAL || echo "Warning: Vulnerabilities detected"'
                }
            }
        }

        stage('Check Nexus Connectivity') {
            steps {
                script {
                    def nexusCheck = sh(script: "curl -s --fail $NEXUS_URL/v2/_catalog || echo 'Nexus not reachable'", returnStatus: true)
                    if (nexusCheck != 0) {
                        error("Nexus registry is not accessible. Check network or credentials.")
                    }
                }
            }
        }

        stage('Push to Nexus') {
            steps {
                withCredentials([usernamePassword(credentialsId: NEXUS_CREDENTIALS, usernameVariable: 'admin', 1709b6ad-4f9c-4425-bb2a-0f9346c4e668: 'NEXUS_PASS')]) {
                    sh '''
                        docker login -u $NEXUS_USER -p $NEXUS_PASS $NEXUS_URL
                        docker tag $DOCKER_IMAGE $NEXUS_URL/nodemongoapp:6.0
                        docker push $NEXUS_URL/nodemongoapp:6.0
                    '''
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    try {
                        sh 'sonar-scanner'
                    } catch (Exception e) {
                        echo "SonarQube scan failed, but continuing..."
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs for errors.'
        }
    }
}
172.28.240.88
